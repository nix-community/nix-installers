name: CI

on:
  pull_request:

jobs:

  checks:
    runs-on: ubuntu-latest
    steps:
    - uses: cachix/install-nix-action@v31
      with:
        nix_path: nixpkgs=channel:nixos-unstable
    - name: Add nix-community cache
      uses: cachix/cachix-action@v16
      with:
        name: nix-community
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - uses: actions/checkout@v4.2.2
    - name: Run checks
      run: nix flake check -L

  build-nix:
    runs-on: ubuntu-latest
    steps:
    - uses: cachix/install-nix-action@v31
      with:
        nix_path: nixpkgs=channel:nixos-unstable
    - name: Add nix-community cache
      uses: cachix/cachix-action@v16
      with:
        name: nix-community
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - uses: actions/checkout@v4.2.2
    - name: Run build
      run: nix-build --no-out-link .
    - name: Create artifact
      run: cp $(nix-build --no-out-link . -A nix.deb) nix-multi-user.deb
    - uses: actions/upload-artifact@v4
      with:
        name: nix-multi-user.deb
        path: nix-multi-user.deb
        retention-days: 1

  build-lix:
    runs-on: ubuntu-latest
    steps:
    - uses: cachix/install-nix-action@v31
      with:
        nix_path: nixpkgs=channel:nixos-unstable
    - name: Add nix-community cache
      uses: cachix/cachix-action@v16
      with:
        name: nix-community
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - uses: actions/checkout@v4.2.2
    - name: Run build
      run: nix-build --no-out-link .
    - name: Create artifact
      run: cp $(nix-build --no-out-link . -A lix.deb) lix-multi-user.deb
    - uses: actions/upload-artifact@v4
      with:
        name: lix-multi-user.deb
        path: lix-multi-user.deb
        retention-days: 1

  test-nix:
    needs: build-nix
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v4
      with:
        name: nix-multi-user.deb
        path: nix-multi-user.deb
    - name: Install Nix
      run: sudo dpkg -i nix-multi-user.deb/nix-multi-user.deb
    - name: Run nix-shell
      run: bash -l -c "nix-shell -p hello --run hello"

  test-lix:
    needs: build-lix
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v4
      with:
        name: lix-multi-user.deb
        path: lix-multi-user.deb
    - name: Install Lix
      run: sudo dpkg -i lix-multi-user.deb/lix-multi-user.deb
    - name: Run nix-shell
      run: bash -l -c "nix-shell -p hello --run hello"

  collect:
    runs-on: ubuntu-latest
    needs:
      - checks
      - build-nix
      - build-lix
      - test-nix
      - test-lix
    steps:
      - run: true
